{"ast":null,"code":"import{Streamlit,withStreamlitConnection}from\"streamlit-component-lib\";import React,{useEffect,useState,useRef}from\"react\";import{ChakraProvider,Input,Box,HStack,VStack,Center,Button,Text,Flex}from'@chakra-ui/react';import{extendTheme}from'@chakra-ui/react';import useImage from'use-image';import BBoxCanvas from\"./BBoxCanvas\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const theme=extendTheme({config:{initialColorMode:'light',useSystemColorMode:false}});// 공통 bbox 포맷터 함수\nconst formatBBoxes=rects=>rects.map(rect=>({box_id:rect.id,bbox:[rect.x,rect.y,rect.width,rect.height],label:rect.label||\"\"}));const Detection=_ref=>{let{args}=_ref;const{image_url,image_size,bbox_info,color_map,line_width,use_space,ocr_suggestions}=args;const params=new URLSearchParams(window.location.search);const baseUrl=params.get('streamlitUrl');const[image]=useImage(baseUrl+image_url);const[rectangles,setRectangles]=useState(bbox_info.map((bb,i)=>({x:bb.bbox[0],y:bb.bbox[1],width:bb.bbox[2],height:bb.bbox[3],label:bb.label,stroke:\"#39FF14\",id:'bbox-'+i})));const[selectedId,setSelectedId]=useState(null);const[label,setLabel]=useState(\"\");const[mode,setMode]=useState('Draw');const[isLabelEditMode,setIsLabelEditMode]=useState(false);const[scale,setScale]=useState(1.0);const[saveNotification,setSaveNotification]=useState(false);const[showLabels,setShowLabels]=useState(false);const[suggestedLabels,setSuggestedLabels]=useState([]);const[isLoadingLabels,setIsLoadingLabels]=useState(false);const[showSuggestions,setShowSuggestions]=useState(false);const pendingOCRRequestRef=useRef(false);const[ocrTrigger,setOcrTrigger]=useState(null);const prevTriggerRef=useRef(null);useEffect(()=>{if(ocr_suggestions&&ocr_suggestions.length>0&&JSON.stringify(ocr_suggestions)!==JSON.stringify(suggestedLabels)){console.log(\"📥 OCR 응답 수신:\",ocr_suggestions);setSuggestedLabels(ocr_suggestions);setIsLoadingLabels(false);setShowSuggestions(true);pendingOCRRequestRef.current=false;// ✅ OCR 응답 도착 시 요청 가능 상태로 복구\n}},[ocr_suggestions]);const sendStateToStreamlit=function(currentMode,boxesData,currentScale){let selectedBoxId=arguments.length>3&&arguments[3]!==undefined?arguments[3]:null;console.log(\"📤 sendStateToStreamlit 호출됨\",{mode:currentMode,request_ocr:false,selected_box_id:selectedBoxId});if(pendingOCRRequestRef.current)return;// 🔒 OCR 중이면 skip\nconst currentBboxValue=formatBBoxes(boxesData);if(selectedBoxId!==null){const selectedBox=boxesData.find(box=>box.id===selectedBoxId);if(!selectedBox)return;Streamlit.setComponentValue({mode:currentMode,bboxes:currentBboxValue,scale:currentScale,save_requested:false,request_ocr:false,selected_box_id:selectedBoxId,selected_box_coords:[selectedBox.x,selectedBox.y,selectedBox.width,selectedBox.height]});}else{Streamlit.setComponentValue({mode:currentMode,bboxes:currentBboxValue,scale:currentScale,save_requested:false});}};console.log(\"🔒 pendingOCRRequestRef 상태:\",pendingOCRRequestRef.current);useEffect(()=>{const onDataFromPython=event=>{if(event.data.type==='streamlit:render'){try{const args=event.data.args;if(args!==null&&args!==void 0&&args.ocr_suggestions&&Array.isArray(args.ocr_suggestions)){console.log(\"📥 OCR 응답 수신:\",args.ocr_suggestions);setSuggestedLabels(args.ocr_suggestions);setIsLoadingLabels(false);setShowSuggestions(true);pendingOCRRequestRef.current=false;}}catch(error){console.error(\"❌ OCR 응답 처리 중 오류:\",error);pendingOCRRequestRef.current=false;}}};window.addEventListener('message',onDataFromPython);return()=>window.removeEventListener('message',onDataFromPython);},[]);useEffect(()=>{if(selectedId){const selectedRect=rectangles.find(rect=>rect.id===selectedId);if(selectedRect){setLabel(selectedRect.label);}}},[selectedId,rectangles]);useEffect(()=>{sendStateToStreamlit(mode,rectangles,scale);},[mode,rectangles]);const handleLabelInputChange=event=>{const newLabel=event.target.value;setLabel(newLabel);if(selectedId!==null){setRectangles(prev=>prev.map(rect=>rect.id===selectedId?{...rect,label:newLabel,stroke:\"#39FF14\"}:rect));}};useEffect(()=>{const initializeScale=()=>{if(scale===1.0&&image_size[0]>0){const scale_ratio=window.innerWidth*0.8/image_size[0];setScale(Math.min(scale_ratio,1.0));}};const updateFrameHeight=()=>{if(image_size[1]>0){Streamlit.setFrameHeight(image_size[1]*scale+100);}};initializeScale();updateFrameHeight();window.addEventListener('resize',updateFrameHeight);return()=>{window.removeEventListener('resize',updateFrameHeight);};},[image_size,scale]);useEffect(()=>{const handleKeyPress=event=>{if(use_space&&event.code===\"Space\"){sendStateToStreamlit(mode,rectangles,scale);}if(event.ctrlKey&&event.code===\"KeyE\"){event.preventDefault();setMode(\"Edit\");}if(event.ctrlKey&&event.code===\"KeyD\"){event.preventDefault();setMode(\"Draw\");}if(event.ctrlKey&&event.code===\"KeyL\"){event.preventDefault();if(selectedId){setIsLabelEditMode(true);setShowSuggestions(true);setIsLoadingLabels(false);}}if(event.ctrlKey&&event.code===\"KeyM\"){event.preventDefault();if(selectedId){console.log(\"🆕 Ctrl+M pressed → OCR 요청 트리거\");setIsLoadingLabels(true);setOcrTrigger(selectedId);// 👈 여기서만 트리거\n}}if(event.ctrlKey&&event.code===\"KeyR\"){event.preventDefault();setShowLabels(prev=>!prev);}if(event.ctrlKey&&event.code===\"KeyS\"){event.preventDefault();setSaveNotification(true);setTimeout(()=>{setSaveNotification(false);},3000);Streamlit.setComponentValue({mode,bboxes:formatBBoxes(rectangles),scale,save_requested:true});}if(event.code===\"Delete\"&&selectedId){event.preventDefault();setRectangles(prev=>prev.filter(rect=>rect.id!==selectedId));setSelectedId(null);setIsLabelEditMode(false);}if(event.code===\"Escape\"){event.preventDefault();if(isLabelEditMode){setIsLabelEditMode(false);}else if(selectedId){setSelectedId(null);}}};window.addEventListener(\"keydown\",handleKeyPress);return()=>{window.removeEventListener(\"keydown\",handleKeyPress);};},[rectangles,use_space,selectedId,isLabelEditMode,mode]);useEffect(()=>{const handleWheel=event=>{if(event.ctrlKey){event.preventDefault();let newScale=scale+(event.deltaY<0?0.1:-0.1);newScale=Math.min(Math.max(newScale,0.5),3.0);setScale(newScale);}};window.addEventListener('wheel',handleWheel,{passive:false,capture:true});},[scale]);const formatScale=scale=>`${Math.round(scale*100)}%`;const handleModeChange=newMode=>{setMode(newMode);sendStateToStreamlit(newMode,rectangles,scale);};const handleSuggestionSelect=suggestedLabel=>{setLabel(suggestedLabel);if(selectedId!==null){setRectangles(prev=>prev.map(rect=>rect.id===selectedId?{...rect,label:suggestedLabel,stroke:\"#39FF14\"}:rect));}setShowSuggestions(false);};useEffect(()=>{if(!ocrTrigger||ocrTrigger===prevTriggerRef.current)return;prevTriggerRef.current=ocrTrigger;const selectedBox=rectangles.find(rect=>rect.id===ocrTrigger);if(!selectedBox)return;if(pendingOCRRequestRef.current){console.log(\"🔁 이미 OCR 요청 중입니다. 요청 무시됨.\");return;}console.log(\"📤 OCR 요청 실행:\",ocrTrigger);pendingOCRRequestRef.current=true;Streamlit.setComponentValue({mode,bboxes:formatBBoxes(rectangles),scale,request_ocr:true,selected_box_id:ocrTrigger,selected_box_coords:[selectedBox.x,selectedBox.y,selectedBox.width,selectedBox.height]});// 요청 후 트리거 리셋\nsetOcrTrigger(null);},[ocrTrigger]);return/*#__PURE__*/_jsx(ChakraProvider,{theme:theme,children:/*#__PURE__*/_jsxs(VStack,{spacing:4,align:\"stretch\",children:[saveNotification&&/*#__PURE__*/_jsx(Box,{p:3,bg:\"green.100\",color:\"green.800\",borderRadius:\"md\",position:\"fixed\",top:\"20px\",left:\"50%\",transform:\"translateX(-50%)\",zIndex:100,boxShadow:\"md\",children:/*#__PURE__*/_jsxs(Text,{fontWeight:\"bold\",children:[/*#__PURE__*/_jsx(\"span\",{role:\"img\",\"aria-label\":\"save\",children:\"\\uD83D\\uDCBE\"}),\" \\uC5B4\\uB178\\uD14C\\uC774\\uC158 \\uC800\\uC7A5 \\uC694\\uCCAD\\uC774 \\uC804\\uC1A1\\uB418\\uC5C8\\uC2B5\\uB2C8\\uB2E4!\"]})}),/*#__PURE__*/_jsxs(Box,{p:3,bg:\"gray.200\",borderRadius:\"md\",position:\"sticky\",top:0,zIndex:10,borderWidth:\"1px\",boxShadow:\"sm\",children:[/*#__PURE__*/_jsxs(Flex,{justifyContent:\"space-between\",alignItems:\"center\",children:[/*#__PURE__*/_jsx(HStack,{spacing:4,children:/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Text,{fontSize:\"sm\",mb:1,color:\"black\",children:\"Class\"}),/*#__PURE__*/_jsx(Input,{value:label,onChange:handleLabelInputChange,placeholder:\"Enter label\",size:\"sm\",width:\"200px\",bg:\"white\",borderColor:\"gray.200\"})]})}),/*#__PURE__*/_jsxs(HStack,{children:[/*#__PURE__*/_jsxs(Text,{fontSize:\"sm\",mr:2,color:\"black\",children:[\"Zoom: \",formatScale(scale)]}),/*#__PURE__*/_jsx(Button,{size:\"sm\",colorScheme:\"teal\",variant:showLabels?\"solid\":\"outline\",onClick:()=>setShowLabels(prev=>!prev),children:showLabels?\"Hide Labels\":\"Show Labels\"}),/*#__PURE__*/_jsx(Button,{size:\"sm\",colorScheme:\"green\",variant:mode===\"Draw\"?\"solid\":\"outline\",onClick:()=>handleModeChange(\"Draw\"),children:\"Draw\"}),/*#__PURE__*/_jsx(Button,{size:\"sm\",colorScheme:\"blue\",variant:mode===\"Edit\"?\"solid\":\"outline\",onClick:()=>handleModeChange(\"Edit\"),children:\"Edit\"}),/*#__PURE__*/_jsx(Button,{size:\"sm\",colorScheme:\"purple\",onClick:()=>{setSaveNotification(true);setTimeout(()=>setSaveNotification(false),3000);Streamlit.setComponentValue({mode,bboxes:formatBBoxes(rectangles),scale,save_requested:true});},children:\"Save\"})]})]}),/*#__PURE__*/_jsx(Flex,{mt:2,justifyContent:\"space-between\",alignItems:\"center\",children:/*#__PURE__*/_jsxs(Text,{fontSize:\"xs\",color:\"black\",children:[\"Selected Items: \",rectangles.length]})})]}),/*#__PURE__*/_jsx(Box,{children:/*#__PURE__*/_jsx(Center,{children:/*#__PURE__*/_jsx(BBoxCanvas,{rectangles:rectangles,mode:mode,selectedId:selectedId,scale:scale,setSelectedId:setSelectedId,setRectangles:setRectangles,setLabel:setLabel,color_map:color_map,label:label,image:image,image_size:image_size,strokeWidth:line_width,isLabelEditMode:isLabelEditMode,setIsLabelEditMode:setIsLabelEditMode,handleLabelInputChange:handleLabelInputChange,showLabels:showLabels,suggestedLabels:suggestedLabels,showSuggestions:showSuggestions,setShowSuggestions:setShowSuggestions,handleSuggestionSelect:handleSuggestionSelect,isLoadingLabels:isLoadingLabels})})})]})});};export default withStreamlitConnection(Detection);","map":{"version":3,"names":["Streamlit","withStreamlitConnection","React","useEffect","useState","useRef","ChakraProvider","Input","Box","HStack","VStack","Center","Button","Text","Flex","extendTheme","useImage","BBoxCanvas","jsx","_jsx","jsxs","_jsxs","theme","config","initialColorMode","useSystemColorMode","formatBBoxes","rects","map","rect","box_id","id","bbox","x","y","width","height","label","Detection","_ref","args","image_url","image_size","bbox_info","color_map","line_width","use_space","ocr_suggestions","params","URLSearchParams","window","location","search","baseUrl","get","image","rectangles","setRectangles","bb","i","stroke","selectedId","setSelectedId","setLabel","mode","setMode","isLabelEditMode","setIsLabelEditMode","scale","setScale","saveNotification","setSaveNotification","showLabels","setShowLabels","suggestedLabels","setSuggestedLabels","isLoadingLabels","setIsLoadingLabels","showSuggestions","setShowSuggestions","pendingOCRRequestRef","ocrTrigger","setOcrTrigger","prevTriggerRef","length","JSON","stringify","console","log","current","sendStateToStreamlit","currentMode","boxesData","currentScale","selectedBoxId","arguments","undefined","request_ocr","selected_box_id","currentBboxValue","selectedBox","find","box","setComponentValue","bboxes","save_requested","selected_box_coords","onDataFromPython","event","data","type","Array","isArray","error","addEventListener","removeEventListener","selectedRect","handleLabelInputChange","newLabel","target","value","prev","initializeScale","scale_ratio","innerWidth","Math","min","updateFrameHeight","setFrameHeight","handleKeyPress","code","ctrlKey","preventDefault","setTimeout","filter","handleWheel","newScale","deltaY","max","passive","capture","formatScale","round","handleModeChange","newMode","handleSuggestionSelect","suggestedLabel","children","spacing","align","p","bg","color","borderRadius","position","top","left","transform","zIndex","boxShadow","fontWeight","role","borderWidth","justifyContent","alignItems","fontSize","mb","onChange","placeholder","size","borderColor","mr","colorScheme","variant","onClick","mt","strokeWidth"],"sources":["/Users/nongshim/Desktop/Python/project/streamlit_image_annotation_backup/Detection/frontend/src/Detection.tsx"],"sourcesContent":["import {\n  Streamlit,\n  withStreamlitConnection,\n  ComponentProps\n} from \"streamlit-component-lib\"\nimport React, { useEffect, useState, useRef } from \"react\"\nimport { ChakraProvider, Input, Box, HStack, VStack, Center, Button, Text, Flex } from '@chakra-ui/react'\nimport { extendTheme } from '@chakra-ui/react';\nimport useImage from 'use-image';\nimport BBoxCanvas from \"./BBoxCanvas\";\nimport debounce from 'lodash/debounce';\n\nconst theme = extendTheme({\n  config: {\n    initialColorMode: 'light',\n    useSystemColorMode: false,\n  },\n});\n\nexport interface PythonArgs {\n  image_url: string,\n  image_size: number[],\n  bbox_info: any[],\n  color_map: any,\n  line_width: number,\n  use_space: boolean,\n  ocr_suggestions: string[]\n}\n\ninterface Rectangle {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n  label: string;\n  stroke: string;\n  id: string;\n}\n\n// 공통 bbox 포맷터 함수\nconst formatBBoxes = (rects: Rectangle[]) =>\n  rects.map((rect) => ({\n    box_id: rect.id,\n    bbox: [rect.x, rect.y, rect.width, rect.height],\n    label: rect.label || \"\",\n  }));\n\nconst Detection = ({ args }: ComponentProps) => {\n  const {\n    image_url,\n    image_size,\n    bbox_info,\n    color_map,\n    line_width,\n    use_space,\n    ocr_suggestions\n  }: PythonArgs = args\n\n  const params = new URLSearchParams(window.location.search);\n  const baseUrl = params.get('streamlitUrl')\n  const [image] = useImage(baseUrl + image_url)\n\n  const [rectangles, setRectangles] = useState<Rectangle[]>(\n    bbox_info.map((bb, i) => ({\n      x: bb.bbox[0],\n      y: bb.bbox[1],\n      width: bb.bbox[2],\n      height: bb.bbox[3],\n      label: bb.label,\n      stroke: \"#39FF14\",\n      id: 'bbox-' + i\n    }))\n  );\n  \n  const [selectedId, setSelectedId] = useState<string | null>(null);\n  const [label, setLabel] = useState(\"\"); \n  const [mode, setMode] = useState<string>('Draw');\n  const [isLabelEditMode, setIsLabelEditMode] = useState(false);\n  const [scale, setScale] = useState(1.0);\n  const [saveNotification, setSaveNotification] = useState(false);\n  const [showLabels, setShowLabels] = useState(false);\n  const [suggestedLabels, setSuggestedLabels] = useState<string[]>([]);\n  const [isLoadingLabels, setIsLoadingLabels] = useState(false);\n  const [showSuggestions, setShowSuggestions] = useState(false);\n  const pendingOCRRequestRef = useRef(false);\n  const [ocrTrigger, setOcrTrigger] = useState<string | null>(null);\n  const prevTriggerRef = useRef<string | null>(null);\n\n  useEffect(() => {\n    if (\n      ocr_suggestions && \n      ocr_suggestions.length > 0 &&\n      JSON.stringify(ocr_suggestions) !== JSON.stringify(suggestedLabels)\n    ) {\n      console.log(\"📥 OCR 응답 수신:\", ocr_suggestions);\n      setSuggestedLabels(ocr_suggestions);\n      setIsLoadingLabels(false);\n      setShowSuggestions(true);\n      pendingOCRRequestRef.current = false; // ✅ OCR 응답 도착 시 요청 가능 상태로 복구\n    }\n  }, [ocr_suggestions]);\n\n  const sendStateToStreamlit = (currentMode: string, boxesData: Rectangle[], currentScale: number, selectedBoxId: string | null = null) => {\n    console.log(\"📤 sendStateToStreamlit 호출됨\", {\n      mode: currentMode,\n      request_ocr: false,\n      selected_box_id: selectedBoxId\n    });\n\n    if (pendingOCRRequestRef.current) return; // 🔒 OCR 중이면 skip\n\n    const currentBboxValue = formatBBoxes(boxesData);\n\n    if (selectedBoxId !== null) {\n      const selectedBox = boxesData.find(box => box.id === selectedBoxId);\n      if (!selectedBox) return;\n\n      Streamlit.setComponentValue({\n        mode: currentMode,\n        bboxes: currentBboxValue,\n        scale: currentScale,\n        save_requested: false,\n        request_ocr: false,\n        selected_box_id: selectedBoxId,\n        selected_box_coords: [selectedBox.x, selectedBox.y, selectedBox.width, selectedBox.height]\n      });\n    } else {\n      Streamlit.setComponentValue({\n        mode: currentMode,\n        bboxes: currentBboxValue,\n        scale: currentScale,\n        save_requested: false\n      });\n    }\n  };\n\n\n  console.log(\"🔒 pendingOCRRequestRef 상태:\", pendingOCRRequestRef.current);\n\n  useEffect(() => {\n    const onDataFromPython = (event: MessageEvent) => {\n      if (event.data.type === 'streamlit:render') {\n        try {\n          const args = event.data.args;\n          if (args?.ocr_suggestions && Array.isArray(args.ocr_suggestions)) {\n            console.log(\"📥 OCR 응답 수신:\", args.ocr_suggestions);\n            setSuggestedLabels(args.ocr_suggestions);\n            setIsLoadingLabels(false);\n            setShowSuggestions(true);\n            pendingOCRRequestRef.current = false;\n          }\n        } catch (error) {\n          console.error(\"❌ OCR 응답 처리 중 오류:\", error);\n          pendingOCRRequestRef.current = false;\n        }\n      }\n    };\n    window.addEventListener('message', onDataFromPython);\n    return () => window.removeEventListener('message', onDataFromPython);\n  }, []);\n\n  useEffect(() => {\n    if (selectedId) {\n      const selectedRect = rectangles.find(rect => rect.id === selectedId);\n      if (selectedRect) {\n        setLabel(selectedRect.label);\n      }\n    }\n  }, [selectedId, rectangles]);\n\n  useEffect(() => {\n    sendStateToStreamlit(mode, rectangles, scale);\n  }, [mode, rectangles]);\n\n  const handleLabelInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newLabel = event.target.value;\n    setLabel(newLabel);\n    if (selectedId !== null) {\n      setRectangles((prev) =>\n        prev.map((rect) =>\n          rect.id === selectedId ? { ...rect, label: newLabel, stroke: \"#39FF14\" } : rect\n        )\n      );\n    }\n  };\n\n  useEffect(() => {\n    const initializeScale = () => {\n      if (scale === 1.0 && image_size[0] > 0) {\n        const scale_ratio = window.innerWidth * 0.8 / image_size[0];\n        setScale(Math.min(scale_ratio, 1.0));\n      }\n    };\n    const updateFrameHeight = () => {\n      if (image_size[1] > 0) {\n        Streamlit.setFrameHeight(image_size[1] * scale + 100);\n      }\n    };\n    initializeScale();\n    updateFrameHeight();\n    window.addEventListener('resize', updateFrameHeight);\n    return () => {\n      window.removeEventListener('resize', updateFrameHeight);\n    };\n  }, [image_size, scale]);\n\n  useEffect(() => {\n    const handleKeyPress = (event: KeyboardEvent) => {\n      if (use_space && event.code === \"Space\") {\n        sendStateToStreamlit(mode, rectangles, scale);  \n      }\n      if (event.ctrlKey && event.code === \"KeyE\") {\n        event.preventDefault();\n        setMode(\"Edit\");\n      }\n      if (event.ctrlKey && event.code === \"KeyD\") {\n        event.preventDefault();\n        setMode(\"Draw\");\n      }\n      if (event.ctrlKey && event.code === \"KeyL\") {\n        event.preventDefault();\n        if (selectedId) {\n          setIsLabelEditMode(true);\n          setShowSuggestions(true);\n          setIsLoadingLabels(false);\n        }\n      }\n      \n      if (event.ctrlKey && event.code === \"KeyM\") {\n        event.preventDefault();\n        if (selectedId) {\n          console.log(\"🆕 Ctrl+M pressed → OCR 요청 트리거\");\n          setIsLoadingLabels(true);\n          setOcrTrigger(selectedId);  // 👈 여기서만 트리거\n        }\n      }\n      \n      if (event.ctrlKey && event.code === \"KeyR\") {\n        event.preventDefault();\n        setShowLabels(prev => !prev);\n      }\n      if (event.ctrlKey && event.code === \"KeyS\") {\n        event.preventDefault();\n        setSaveNotification(true);\n        setTimeout(() => {\n          setSaveNotification(false);\n        }, 3000);\n        Streamlit.setComponentValue({\n          mode,\n          bboxes: formatBBoxes(rectangles),\n          scale,\n          save_requested: true\n        });\n      }\n      if (event.code === \"Delete\" && selectedId) {\n        event.preventDefault();\n        setRectangles((prev) => prev.filter((rect) => rect.id !== selectedId));\n        setSelectedId(null);\n        setIsLabelEditMode(false);\n      }\n      if (event.code === \"Escape\") {\n        event.preventDefault();\n        if (isLabelEditMode) {\n          setIsLabelEditMode(false);\n        } else if (selectedId) {\n          setSelectedId(null);\n        }\n      }\n    };\n    window.addEventListener(\"keydown\", handleKeyPress);\n    return () => {\n      window.removeEventListener(\"keydown\", handleKeyPress);\n    };\n  }, [rectangles, use_space, selectedId, isLabelEditMode, mode]);\n\n  useEffect(() => {\n    const handleWheel = (event: WheelEvent) => {\n      if (event.ctrlKey) {\n        event.preventDefault();\n        let newScale = scale + (event.deltaY < 0 ? 0.1 : -0.1);\n        newScale = Math.min(Math.max(newScale, 0.5), 3.0);\n        setScale(newScale);\n      }\n    };\n    window.addEventListener('wheel', handleWheel, { passive: false, capture: true });\n  }, [scale]);\n\n  const formatScale = (scale: number) => `${Math.round(scale * 100)}%`;\n\n  const handleModeChange = (newMode: string) => {\n    setMode(newMode);\n    sendStateToStreamlit(newMode, rectangles, scale);\n  };\n\n  const handleSuggestionSelect = (suggestedLabel: string) => {\n    setLabel(suggestedLabel);\n    if (selectedId !== null) {\n      setRectangles((prev) =>\n        prev.map((rect) =>\n          rect.id === selectedId ? { ...rect, label: suggestedLabel, stroke: \"#39FF14\" } : rect\n        )\n      );\n    }\n    setShowSuggestions(false);\n  };\n\n  useEffect(() => {\n    if (!ocrTrigger || ocrTrigger === prevTriggerRef.current) return;\n    prevTriggerRef.current = ocrTrigger;\n\n    const selectedBox = rectangles.find(rect => rect.id === ocrTrigger);\n    if (!selectedBox) return;\n\n    if (pendingOCRRequestRef.current) {\n      console.log(\"🔁 이미 OCR 요청 중입니다. 요청 무시됨.\");\n      return;\n    }\n  \n    console.log(\"📤 OCR 요청 실행:\", ocrTrigger);\n    pendingOCRRequestRef.current = true;\n  \n    Streamlit.setComponentValue({\n      mode,\n      bboxes: formatBBoxes(rectangles),\n      scale,\n      request_ocr: true,\n      selected_box_id: ocrTrigger,\n      selected_box_coords: [selectedBox.x, selectedBox.y, selectedBox.width, selectedBox.height]\n    });\n  \n    // 요청 후 트리거 리셋\n    setOcrTrigger(null);\n  }, [ocrTrigger]);\n  \n  \n  return (\n    <ChakraProvider theme={theme}>\n      <VStack spacing={4} align=\"stretch\">\n        {saveNotification && (\n          <Box \n            p={3} \n            bg=\"green.100\" \n            color=\"green.800\" \n            borderRadius=\"md\" \n            position=\"fixed\" \n            top=\"20px\" \n            left=\"50%\" \n            transform=\"translateX(-50%)\" \n            zIndex={100}\n            boxShadow=\"md\"\n          >\n            <Text fontWeight=\"bold\">\n              <span role=\"img\" aria-label=\"save\">💾</span> 어노테이션 저장 요청이 전송되었습니다!\n            </Text>\n          </Box>\n        )}\n\n        <Box \n          p={3} \n          bg=\"gray.200\" \n          borderRadius=\"md\" \n          position=\"sticky\" \n          top={0} \n          zIndex={10}\n          borderWidth=\"1px\"\n          boxShadow=\"sm\"\n        >\n          <Flex justifyContent=\"space-between\" alignItems=\"center\">\n            <HStack spacing={4}>\n              <Box>\n                <Text fontSize=\"sm\" mb={1} color=\"black\">Class</Text>\n                <Input \n                  value={label} \n                  onChange={handleLabelInputChange} \n                  placeholder=\"Enter label\"\n                  size=\"sm\"\n                  width=\"200px\"\n                  bg=\"white\"\n                  borderColor=\"gray.200\"\n                />\n              </Box>\n            </HStack>\n\n            <HStack>\n              <Text fontSize=\"sm\" mr={2} color=\"black\">Zoom: {formatScale(scale)}</Text>\n              <Button size=\"sm\" colorScheme=\"teal\" variant={showLabels ? \"solid\" : \"outline\"} onClick={() => setShowLabels(prev => !prev)}>\n                {showLabels ? \"Hide Labels\" : \"Show Labels\"}\n              </Button>\n              <Button size=\"sm\" colorScheme=\"green\" variant={mode === \"Draw\" ? \"solid\" : \"outline\"} onClick={() => handleModeChange(\"Draw\")}>\n                Draw\n              </Button>\n              <Button size=\"sm\" colorScheme=\"blue\" variant={mode === \"Edit\" ? \"solid\" : \"outline\"} onClick={() => handleModeChange(\"Edit\")}>\n                Edit\n              </Button>\n              <Button size=\"sm\" colorScheme=\"purple\" onClick={() => {\n                setSaveNotification(true);\n                setTimeout(() => setSaveNotification(false), 3000);\n                Streamlit.setComponentValue({\n                  mode,\n                  bboxes: formatBBoxes(rectangles),\n                  scale,\n                  save_requested: true\n                });\n              }}>\n                Save\n              </Button>\n            </HStack>\n          </Flex>\n\n          <Flex mt={2} justifyContent=\"space-between\" alignItems=\"center\">\n            <Text fontSize=\"xs\" color=\"black\">Selected Items: {rectangles.length}</Text>\n          </Flex>\n        </Box>\n\n        <Box>\n          <Center>\n            <BBoxCanvas\n              rectangles={rectangles}\n              mode={mode}\n              selectedId={selectedId}\n              scale={scale}\n              setSelectedId={setSelectedId}\n              setRectangles={setRectangles}\n              setLabel={setLabel}\n              color_map={color_map}\n              label={label}\n              image={image}\n              image_size={image_size}\n              strokeWidth={line_width}\n              isLabelEditMode={isLabelEditMode}\n              setIsLabelEditMode={setIsLabelEditMode}\n              handleLabelInputChange={handleLabelInputChange}\n              showLabels={showLabels}\n              suggestedLabels={suggestedLabels}\n              showSuggestions={showSuggestions}\n              setShowSuggestions={setShowSuggestions}\n              handleSuggestionSelect={handleSuggestionSelect}\n              isLoadingLabels={isLoadingLabels}\n            />\n          </Center>\n        </Box>\n      </VStack>\n    </ChakraProvider>\n  );\n};\n\nexport default withStreamlitConnection(Detection);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}