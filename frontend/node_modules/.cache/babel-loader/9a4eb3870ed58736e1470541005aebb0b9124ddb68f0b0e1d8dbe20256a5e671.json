{"ast":null,"code":"import{useRef,useState}from\"react\";import{Streamlit}from\"streamlit-component-lib\";export const useOcrManager=_ref=>{let{rectangles,scale,mode}=_ref;const[suggestedLabels,setSuggestedLabels]=useState([]);const[showSuggestions,setShowSuggestions]=useState(false);const[isLoading,setIsLoading]=useState(false);const pendingRef=useRef(false);const prevTriggerRef=useRef(null);const[triggerId,setTriggerId]=useState(null);const formatBBoxes=rects=>rects.map(rect=>({box_id:rect.id,bbox:[rect.x,rect.y,rect.width,rect.height],label:rect.label||\"\"}));// OCR 요청 트리거\nconst requestOcrForBox=boxId=>{if(pendingRef.current||prevTriggerRef.current===boxId)return;const box=rectangles.find(r=>r.id===boxId);if(!box)return;pendingRef.current=true;prevTriggerRef.current=boxId;setIsLoading(true);Streamlit.setComponentValue({mode,bboxes:formatBBoxes(rectangles),scale,request_ocr:true,selected_box_id:boxId,selected_box_coords:[box.x,box.y,box.width,box.height]});setTriggerId(boxId);// 내부 상태 유지\n};// OCR 응답 수신 후 호출\nconst handleOcrResponse=suggestions=>{if(!suggestions||suggestions.length===0)return;setSuggestedLabels(suggestions);setShowSuggestions(true);setIsLoading(false);resetOcrState();// 응답 도착 후 상태 초기화\n};// 외부에서 OCR 상태 초기화 (ex: args.request_ocr === false)\nconst resetOcrState=()=>{pendingRef.current=false;prevTriggerRef.current=null;setTriggerId(null);};return{requestOcrForBox,handleOcrResponse,resetOcrState,suggestedLabels,showSuggestions,isLoading,setShowSuggestions};};","map":{"version":3,"names":["useRef","useState","Streamlit","useOcrManager","_ref","rectangles","scale","mode","suggestedLabels","setSuggestedLabels","showSuggestions","setShowSuggestions","isLoading","setIsLoading","pendingRef","prevTriggerRef","triggerId","setTriggerId","formatBBoxes","rects","map","rect","box_id","id","bbox","x","y","width","height","label","requestOcrForBox","boxId","current","box","find","r","setComponentValue","bboxes","request_ocr","selected_box_id","selected_box_coords","handleOcrResponse","suggestions","length","resetOcrState"],"sources":["/Users/nongshim/Desktop/Python/project/streamlit_image_annotation_backup/Detection/frontend/src/useOcrManager.ts"],"sourcesContent":["import { useRef, useState, useEffect } from \"react\";\nimport { Streamlit } from \"streamlit-component-lib\";\n\ninterface Rectangle {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n  label: string;\n  stroke: string;\n  id: string;\n}\n\ninterface UseOcrManagerProps {\n  rectangles: Rectangle[];\n  scale: number;\n  mode: string;\n}\n\nexport const useOcrManager = ({ rectangles, scale, mode }: UseOcrManagerProps) => {\n  const [suggestedLabels, setSuggestedLabels] = useState<string[]>([]);\n  const [showSuggestions, setShowSuggestions] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const pendingRef = useRef(false);\n  const prevTriggerRef = useRef<string | null>(null);\n  const [triggerId, setTriggerId] = useState<string | null>(null);\n\n  const formatBBoxes = (rects: Rectangle[]) =>\n    rects.map((rect) => ({\n      box_id: rect.id,\n      bbox: [rect.x, rect.y, rect.width, rect.height],\n      label: rect.label || \"\",\n    }));\n\n  // OCR 요청 트리거\n  const requestOcrForBox = (boxId: string) => {\n    if (pendingRef.current || prevTriggerRef.current === boxId) return;\n\n    const box = rectangles.find((r) => r.id === boxId);\n    if (!box) return;\n\n    pendingRef.current = true;\n    prevTriggerRef.current = boxId;\n    setIsLoading(true);\n\n    Streamlit.setComponentValue({\n      mode,\n      bboxes: formatBBoxes(rectangles),\n      scale,\n      request_ocr: true,\n      selected_box_id: boxId,\n      selected_box_coords: [box.x, box.y, box.width, box.height]\n    });\n\n    setTriggerId(boxId); // 내부 상태 유지\n  };\n\n  // OCR 응답 수신 후 호출\n  const handleOcrResponse = (suggestions: string[]) => {\n    if (!suggestions || suggestions.length === 0) return;\n    setSuggestedLabels(suggestions);\n    setShowSuggestions(true);\n    setIsLoading(false);\n    resetOcrState(); // 응답 도착 후 상태 초기화\n  };\n\n  // 외부에서 OCR 상태 초기화 (ex: args.request_ocr === false)\n  const resetOcrState = () => {\n    pendingRef.current = false;\n    prevTriggerRef.current = null;\n    setTriggerId(null);\n  };\n\n  return {\n    requestOcrForBox,\n    handleOcrResponse,\n    resetOcrState,\n    suggestedLabels,\n    showSuggestions,\n    isLoading,\n    setShowSuggestions\n  };\n};\n"],"mappings":"AAAA,OAASA,MAAM,CAAEC,QAAQ,KAAmB,OAAO,CACnD,OAASC,SAAS,KAAQ,yBAAyB,CAkBnD,MAAO,MAAM,CAAAC,aAAa,CAAGC,IAAA,EAAqD,IAApD,CAAEC,UAAU,CAAEC,KAAK,CAAEC,IAAyB,CAAC,CAAAH,IAAA,CAC3E,KAAM,CAACI,eAAe,CAAEC,kBAAkB,CAAC,CAAGR,QAAQ,CAAW,EAAE,CAAC,CACpE,KAAM,CAACS,eAAe,CAAEC,kBAAkB,CAAC,CAAGV,QAAQ,CAAC,KAAK,CAAC,CAC7D,KAAM,CAACW,SAAS,CAAEC,YAAY,CAAC,CAAGZ,QAAQ,CAAC,KAAK,CAAC,CAEjD,KAAM,CAAAa,UAAU,CAAGd,MAAM,CAAC,KAAK,CAAC,CAChC,KAAM,CAAAe,cAAc,CAAGf,MAAM,CAAgB,IAAI,CAAC,CAClD,KAAM,CAACgB,SAAS,CAAEC,YAAY,CAAC,CAAGhB,QAAQ,CAAgB,IAAI,CAAC,CAE/D,KAAM,CAAAiB,YAAY,CAAIC,KAAkB,EACtCA,KAAK,CAACC,GAAG,CAAEC,IAAI,GAAM,CACnBC,MAAM,CAAED,IAAI,CAACE,EAAE,CACfC,IAAI,CAAE,CAACH,IAAI,CAACI,CAAC,CAAEJ,IAAI,CAACK,CAAC,CAAEL,IAAI,CAACM,KAAK,CAAEN,IAAI,CAACO,MAAM,CAAC,CAC/CC,KAAK,CAAER,IAAI,CAACQ,KAAK,EAAI,EACvB,CAAC,CAAC,CAAC,CAEL;AACA,KAAM,CAAAC,gBAAgB,CAAIC,KAAa,EAAK,CAC1C,GAAIjB,UAAU,CAACkB,OAAO,EAAIjB,cAAc,CAACiB,OAAO,GAAKD,KAAK,CAAE,OAE5D,KAAM,CAAAE,GAAG,CAAG5B,UAAU,CAAC6B,IAAI,CAAEC,CAAC,EAAKA,CAAC,CAACZ,EAAE,GAAKQ,KAAK,CAAC,CAClD,GAAI,CAACE,GAAG,CAAE,OAEVnB,UAAU,CAACkB,OAAO,CAAG,IAAI,CACzBjB,cAAc,CAACiB,OAAO,CAAGD,KAAK,CAC9BlB,YAAY,CAAC,IAAI,CAAC,CAElBX,SAAS,CAACkC,iBAAiB,CAAC,CAC1B7B,IAAI,CACJ8B,MAAM,CAAEnB,YAAY,CAACb,UAAU,CAAC,CAChCC,KAAK,CACLgC,WAAW,CAAE,IAAI,CACjBC,eAAe,CAAER,KAAK,CACtBS,mBAAmB,CAAE,CAACP,GAAG,CAACR,CAAC,CAAEQ,GAAG,CAACP,CAAC,CAAEO,GAAG,CAACN,KAAK,CAAEM,GAAG,CAACL,MAAM,CAC3D,CAAC,CAAC,CAEFX,YAAY,CAACc,KAAK,CAAC,CAAE;AACvB,CAAC,CAED;AACA,KAAM,CAAAU,iBAAiB,CAAIC,WAAqB,EAAK,CACnD,GAAI,CAACA,WAAW,EAAIA,WAAW,CAACC,MAAM,GAAK,CAAC,CAAE,OAC9ClC,kBAAkB,CAACiC,WAAW,CAAC,CAC/B/B,kBAAkB,CAAC,IAAI,CAAC,CACxBE,YAAY,CAAC,KAAK,CAAC,CACnB+B,aAAa,CAAC,CAAC,CAAE;AACnB,CAAC,CAED;AACA,KAAM,CAAAA,aAAa,CAAGA,CAAA,GAAM,CAC1B9B,UAAU,CAACkB,OAAO,CAAG,KAAK,CAC1BjB,cAAc,CAACiB,OAAO,CAAG,IAAI,CAC7Bf,YAAY,CAAC,IAAI,CAAC,CACpB,CAAC,CAED,MAAO,CACLa,gBAAgB,CAChBW,iBAAiB,CACjBG,aAAa,CACbpC,eAAe,CACfE,eAAe,CACfE,SAAS,CACTD,kBACF,CAAC,CACH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}