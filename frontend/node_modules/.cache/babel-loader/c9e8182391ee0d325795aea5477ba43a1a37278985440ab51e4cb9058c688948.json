{"ast":null,"code":"import{Streamlit,withStreamlitConnection}from\"streamlit-component-lib\";import React,{useEffect,useState,useRef}from\"react\";import{ChakraProvider,Input,Box,HStack,VStack,Center,Button,Text,Flex}from'@chakra-ui/react';import{extendTheme}from'@chakra-ui/react';import useImage from'use-image';import BBoxCanvas from\"./BBoxCanvas\";// 테마 설정 - 강제 라이트 모드\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const theme=extendTheme({config:{initialColorMode:'light',useSystemColorMode:false}});const Detection=_ref=>{let{args}=_ref;const{image_url,image_size,bbox_info,color_map,line_width,use_space,ocr_suggestions}=args;const params=new URLSearchParams(window.location.search);const baseUrl=params.get('streamlitUrl');const[image]=useImage(baseUrl+image_url);const[rectangles,setRectangles]=React.useState(bbox_info.map((bb,i)=>({x:bb.bbox[0],y:bb.bbox[1],width:bb.bbox[2],height:bb.bbox[3],label:bb.label,stroke:\"#39FF14\",// color_map[bb.label],\nid:'bbox-'+i})));const[selectedId,setSelectedId]=React.useState(null);const[label,setLabel]=useState(\"\");const[mode,setMode]=React.useState('Draw');const[isLabelEditMode,setIsLabelEditMode]=useState(false);const[scale,setScale]=useState(1.0);const[saveNotification,setSaveNotification]=useState(false);const[showLabels,setShowLabels]=useState(false);const[suggestedLabels,setSuggestedLabels]=useState([]);const[isLoadingLabels,setIsLoadingLabels]=useState(false);const[showSuggestions,setShowSuggestions]=useState(false);useEffect(()=>{if(ocr_suggestions&&ocr_suggestions.length>0){console.log(\"Received OCR suggestions from props:\",ocr_suggestions);setSuggestedLabels(ocr_suggestions);setIsLoadingLabels(false);setShowSuggestions(true);}},[ocr_suggestions]);// Streamlit 컴포넌트 통신 개선\nconst sendStateToStreamlit=function(currentMode,boxesData,currentScale){let selectedBoxId=arguments.length>3&&arguments[3]!==undefined?arguments[3]:null;try{// 필요한 데이터만 전송하도록 최적화\nconst currentBboxValue=boxesData.map(rect=>({bbox:[rect.x,rect.y,rect.width,rect.height],label:rect.label||\"\"// 빈 라벨 안전하게 처리\n}));// OCR 요청 시에만 full data 전송, 아닐 때는 최소 데이터만\nif(selectedBoxId!==null){console.log(\"DEBUG: OCR 요청 전송\",selectedBoxId);// 선택된 박스가 존재하는지 확인\nconst selectedBox=boxesData.find(box=>box.id===selectedBoxId);if(!selectedBox){console.error(\"선택된 박스를 찾을 수 없음\");return;}Streamlit.setComponentValue({mode:currentMode,bboxes:currentBboxValue,scale:currentScale,save_requested:false,request_ocr:true,selected_box_id:selectedBoxId,selected_box_coords:[selectedBox.x,selectedBox.y,selectedBox.width,selectedBox.height]});}else{// 일반 상태 업데이트에서는 OCR 관련 플래그 제외\nStreamlit.setComponentValue({mode:currentMode,bboxes:currentBboxValue,scale:currentScale,save_requested:false});}}catch(error){console.error(\"상태 전송 중 오류 발생:\",error);}};const pendingOCRRequestRef=useRef(false);const sendOCRRequest=(selectedId,mode,rectangles,scale)=>{if(pendingOCRRequestRef.current){console.log(\"이미 처리 중인 OCR 요청이 있습니다\");return;}pendingOCRRequestRef.current=true;// 선택된 ID에 해당하는 인덱스 찾기\nconst selectedIndex=rectangles.findIndex(rect=>rect.id===selectedId);// 인덱스를 찾았을 때만 요청 전송\nif(selectedIndex!==-1){// OCR 요청 보내기\nStreamlit.setComponentValue({mode:mode,bboxes:rectangles.map(rect=>({bbox:[rect.x,rect.y,rect.width,rect.height],label:rect.label})),scale:scale,request_ocr:true,selected_box_index:selectedIndex// ID 대신 인덱스 전송\n});}else{console.error(\"선택된 ID에 해당하는 바운딩 박스를 찾을 수 없습니다:\",selectedId);}// 요청 플래그 초기화 (일정 시간 후)\nsetTimeout(()=>{pendingOCRRequestRef.current=false;},1000);};// 메시지 이벤트 리스너 수정\nuseEffect(()=>{const onDataFromPython=event=>{if(event.data.type==='streamlit:render'){console.log(\"전체 데이터:\",event.data.args);console.log(\"컴포넌트 데이터:\",event.data.args.data);try{const data=event.data.args.data;// OCR 추천 결과 처리 개선\nif(data&&data.ocr_suggestions&&Array.isArray(data.ocr_suggestions)){console.log(\"DEBUG: OCR 추천 목록 받음:\",data.ocr_suggestions);// 상태 업데이트를 일괄적으로 처리\nsetSuggestedLabels(data.ocr_suggestions);setIsLoadingLabels(false);setShowSuggestions(true);// 디버깅: 실제로 UI에 표시되는지 확인\nsetTimeout(()=>{console.log(\"DEBUG: UI 상태 최종 확인\",{suggestedLabels:data.ocr_suggestions,showSuggestions:true});},100);}}catch(error){console.error(\"오류 발생:\",error);}}};window.addEventListener('message',onDataFromPython);return()=>window.removeEventListener('message',onDataFromPython);},[setSuggestedLabels,setIsLoadingLabels,setShowSuggestions]);// 상태 업데이트 함수들을 의존성 배열에 추가\n// 현재 선택된 박스의 라벨로 입력란 업데이트\nuseEffect(()=>{if(selectedId){const selectedRect=rectangles.find(rect=>rect.id===selectedId);if(selectedRect){setLabel(selectedRect.label);}}},[selectedId,rectangles]);// 모드가 변경될 때마다 Streamlit으로 전송\nuseEffect(()=>{sendStateToStreamlit(mode,rectangles,scale);},[mode,rectangles]);// 모드 변경이 제대로 되는지 확인\nuseEffect(()=>{console.log(\"현재 모드:\",mode);},[mode]);// 사용자 입력을 반영하는 함수\nconst handleLabelInputChange=event=>{const newLabel=event.target.value;setLabel(newLabel);if(selectedId!==null){setRectangles(prev=>prev.map(rect=>rect.id===selectedId?{...rect,label:newLabel,stroke:\"#39FF14\"}:rect// color_map[newLabel] || \"#FF0000\" } : rect\n));}};// 캔버스 크기 조정\nuseEffect(()=>{// 초기 스케일 설정 및 프레임 높이 조정을 하나의 useEffect로 통합\nconst initializeScale=()=>{// 최초 로드 시 초기 스케일 계산\nif(scale===1.0&&image_size[0]>0){const scale_ratio=window.innerWidth*0.8/image_size[0];setScale(Math.min(scale_ratio,1.0));}};const updateFrameHeight=()=>{// 현재 이미지 크기와 스케일 기반으로 프레임 높이 조정\nif(image_size[1]>0){Streamlit.setFrameHeight(image_size[1]*scale+100);}};// 초기화 및 첫 번째 프레임 높이 설정\ninitializeScale();updateFrameHeight();// 윈도우 리사이즈 이벤트 리스너\nwindow.addEventListener('resize',updateFrameHeight);return()=>{window.removeEventListener('resize',updateFrameHeight);};},[image_size,scale]);// 이미지 크기와 스케일 의존성 추가\n// 키보드 단축키 처리\nuseEffect(()=>{const handleKeyPress=event=>{console.log(\"keydown 이벤트 감지됨:\",event.code,\"Ctrl:\",event.ctrlKey,\"Shift:\",event.shiftKey);if(use_space&&event.code===\"Space\"){sendStateToStreamlit(mode,rectangles,scale);}if(event.ctrlKey&&event.code===\"KeyE\"){event.preventDefault();console.log(\"변경: Edit 모드로 전환\");setMode(\"Edit\");}if(event.ctrlKey&&event.code===\"KeyD\"){event.preventDefault();console.log(\"변경: Draw 모드로 전환\");setMode(\"Draw\");}// 라벨 입력 모드 토글 (Ctrl + L)\nif(event.ctrlKey&&event.code===\"KeyL\"){event.preventDefault();console.log(\"Ctrl+L 감지, 선택된 ID:\",selectedId);if(selectedId){// 상태 변경을 일괄 처리하고 함수형 업데이트 사용\nsetIsLabelEditMode(true);setShowSuggestions(true);// OCR 요청을 다음 렌더링 사이클로 지연\n// 렌더링 사이클이 완료된 후 실행되도록 함\nrequestAnimationFrame(()=>{setIsLoadingLabels(true);sendOCRRequest(selectedId,mode,rectangles,scale);});}}// 라벨 표시 토글 (Ctrl + T)\nif(event.ctrlKey&&event.code===\"KeyT\"){event.preventDefault();console.log(\"변경: 라벨 표시 토글\");setShowLabels(prev=>!prev);}// Ctrl+S 단축키 감지 추가\nif(event.ctrlKey&&event.code===\"KeyS\"){event.preventDefault();console.log(\"Ctrl+S 감지: 어노테이션 저장\");// 안내 표시 활성화\nsetSaveNotification(true);// 3초 후에 안내 메시지 숨기기\nsetTimeout(()=>{setSaveNotification(false);},3000);// Streamlit으로 저장 명령 전송\nStreamlit.setComponentValue({mode:mode,bboxes:rectangles.map(rect=>({bbox:[rect.x,rect.y,rect.width,rect.height],label:rect.label})),scale:scale,save_requested:true// 저장 요청 플래그 추가\n});}// 삭제 기능\nif(event.code===\"Delete\"&&selectedId){event.preventDefault();console.log(\"삭제: 선택된 바운딩 박스 삭제\",selectedId);setRectangles(prev=>prev.filter(rect=>rect.id!==selectedId));setSelectedId(null);setIsLabelEditMode(false);}// ESC 키로 라벨 입력 모드 취소 및 선택 해제\nif(event.code===\"Escape\"){event.preventDefault();if(isLabelEditMode){setIsLabelEditMode(false);}else if(selectedId){setSelectedId(null);}}};window.addEventListener(\"keydown\",handleKeyPress);return()=>{window.removeEventListener(\"keydown\",handleKeyPress);};},[rectangles,use_space,selectedId,isLabelEditMode,mode]);// 마우스 휠 확대/축소\nuseEffect(()=>{const handleWheel=event=>{if(event.ctrlKey){event.preventDefault();let newScale=scale+(event.deltaY<0?0.1:-0.1);newScale=Math.min(Math.max(newScale,0.5),3.0);setScale(newScale);}};window.addEventListener('wheel',handleWheel,{passive:false,capture:true});},[scale]);// 스케일 포맷팅\nconst formatScale=scale=>{return`${Math.round(scale*100)}%`;};// 라이트 모드로 고정된 색상 설정\nconst borderColor='gray.200';const textColor='black';const controlBgColor='gray.200';const inputbgColor='white';const handleModeChange=newMode=>{setMode(newMode);// scale을 유지하면서 상태 업데이트\nsendStateToStreamlit(newMode,rectangles,scale);};// 라벨 추천 선택 핸들러 함수 추가\nconst handleSuggestionSelect=suggestedLabel=>{setLabel(suggestedLabel);if(selectedId!==null){setRectangles(prev=>prev.map(rect=>rect.id===selectedId?{...rect,label:suggestedLabel,stroke:\"#39FF14\"}:rect));}setShowSuggestions(false);// 선택 후 추천 UI 닫기\n};return/*#__PURE__*/_jsx(ChakraProvider,{theme:theme,children:/*#__PURE__*/_jsxs(VStack,{spacing:4,align:\"stretch\",children:[saveNotification&&/*#__PURE__*/_jsx(Box,{p:3,bg:\"green.100\",color:\"green.800\",borderRadius:\"md\",position:\"fixed\",top:\"20px\",left:\"50%\",transform:\"translateX(-50%)\",zIndex:100,boxShadow:\"md\",display:\"flex\",alignItems:\"center\",justifyContent:\"center\",children:/*#__PURE__*/_jsxs(Text,{fontWeight:\"bold\",children:[/*#__PURE__*/_jsx(\"span\",{role:\"img\",\"aria-label\":\"save\",children:\"\\uD83D\\uDCBE\"}),\" \\uC5B4\\uB178\\uD14C\\uC774\\uC158 \\uC800\\uC7A5 \\uC694\\uCCAD\\uC774 \\uC804\\uC1A1\\uB418\\uC5C8\\uC2B5\\uB2C8\\uB2E4!\"]})}),/*#__PURE__*/_jsxs(Box,{p:3,bg:controlBgColor,borderRadius:\"md\",position:\"sticky\",top:0,zIndex:10,borderColor:borderColor,borderWidth:\"1px\",boxShadow:\"sm\",children:[/*#__PURE__*/_jsxs(Flex,{justifyContent:\"space-between\",alignItems:\"center\",children:[/*#__PURE__*/_jsx(HStack,{spacing:4,children:/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Text,{fontSize:\"sm\",mb:1,color:textColor,children:\"Class\"}),/*#__PURE__*/_jsx(Input,{value:label,onChange:handleLabelInputChange,placeholder:\"Enter label\",size:\"sm\",width:\"200px\",bg:inputbgColor,borderColor:borderColor})]})}),/*#__PURE__*/_jsxs(HStack,{children:[/*#__PURE__*/_jsxs(Text,{fontSize:\"sm\",mr:2,color:textColor,children:[\"Zoom: \",formatScale(scale)]}),/*#__PURE__*/_jsx(Button,{size:\"sm\",colorScheme:\"teal\",variant:showLabels?\"solid\":\"outline\",opacity:showLabels?1:0.7,onClick:()=>setShowLabels(prev=>!prev),children:showLabels?\"Hide Labels\":\"Show Labels\"}),/*#__PURE__*/_jsx(Button,{size:\"sm\",colorScheme:\"green\",variant:mode===\"Draw\"?\"solid\":\"outline\",opacity:mode===\"Draw\"?1:0.7// onClick={() => setMode(\"Draw\")}\n,onClick:()=>handleModeChange(\"Draw\")// 직접 setMode 대신 핸들러 사용\n,children:\"Draw\"}),/*#__PURE__*/_jsx(Button,{size:\"sm\",colorScheme:\"blue\",variant:mode===\"Edit\"?\"solid\":\"outline\",opacity:mode===\"Edit\"?1:0.7,onClick:()=>setMode(\"Edit\"),children:\"Edit\"}),/*#__PURE__*/_jsx(Button,{size:\"sm\",colorScheme:\"purple\",onClick:()=>{// 저장 요청 플래그를 포함하여 Streamlit으로 데이터 전송\nsetSaveNotification(true);setTimeout(()=>setSaveNotification(false),3000);Streamlit.setComponentValue({mode:mode,bboxes:rectangles.map(rect=>({bbox:[rect.x,rect.y,rect.width,rect.height],label:rect.label})),scale:scale,save_requested:true});},children:\"Save\"})]})]}),/*#__PURE__*/_jsx(Flex,{mt:2,justifyContent:\"space-between\",alignItems:\"center\",children:/*#__PURE__*/_jsxs(Text,{fontSize:\"xs\",color:textColor,children:[\"Selected Items: \",rectangles.length]})})]}),/*#__PURE__*/_jsx(Box,{children:/*#__PURE__*/_jsx(Center,{children:/*#__PURE__*/_jsx(BBoxCanvas,{rectangles:rectangles,mode:mode,selectedId:selectedId,scale:scale,setSelectedId:setSelectedId,setRectangles:setRectangles,setLabel:setLabel,color_map:color_map,label:label,image:image,image_size:image_size,strokeWidth:line_width,isLabelEditMode:isLabelEditMode,setIsLabelEditMode:setIsLabelEditMode,handleLabelInputChange:handleLabelInputChange,showLabels:showLabels,suggestedLabels:suggestedLabels// 여기가 제대로 전달되는지 확인\n,showSuggestions:showSuggestions// 여기가 true로 설정되는지 확인\n,setShowSuggestions:setShowSuggestions,handleSuggestionSelect:handleSuggestionSelect,isLoadingLabels:isLoadingLabels})})})]})});};export default withStreamlitConnection(Detection);","map":{"version":3,"names":["Streamlit","withStreamlitConnection","React","useEffect","useState","useRef","ChakraProvider","Input","Box","HStack","VStack","Center","Button","Text","Flex","extendTheme","useImage","BBoxCanvas","jsx","_jsx","jsxs","_jsxs","theme","config","initialColorMode","useSystemColorMode","Detection","_ref","args","image_url","image_size","bbox_info","color_map","line_width","use_space","ocr_suggestions","params","URLSearchParams","window","location","search","baseUrl","get","image","rectangles","setRectangles","map","bb","i","x","bbox","y","width","height","label","stroke","id","selectedId","setSelectedId","setLabel","mode","setMode","isLabelEditMode","setIsLabelEditMode","scale","setScale","saveNotification","setSaveNotification","showLabels","setShowLabels","suggestedLabels","setSuggestedLabels","isLoadingLabels","setIsLoadingLabels","showSuggestions","setShowSuggestions","length","console","log","sendStateToStreamlit","currentMode","boxesData","currentScale","selectedBoxId","arguments","undefined","currentBboxValue","rect","selectedBox","find","box","error","setComponentValue","bboxes","save_requested","request_ocr","selected_box_id","selected_box_coords","pendingOCRRequestRef","sendOCRRequest","current","selectedIndex","findIndex","selected_box_index","setTimeout","onDataFromPython","event","data","type","Array","isArray","addEventListener","removeEventListener","selectedRect","handleLabelInputChange","newLabel","target","value","prev","initializeScale","scale_ratio","innerWidth","Math","min","updateFrameHeight","setFrameHeight","handleKeyPress","code","ctrlKey","shiftKey","preventDefault","requestAnimationFrame","filter","handleWheel","newScale","deltaY","max","passive","capture","formatScale","round","borderColor","textColor","controlBgColor","inputbgColor","handleModeChange","newMode","handleSuggestionSelect","suggestedLabel","children","spacing","align","p","bg","color","borderRadius","position","top","left","transform","zIndex","boxShadow","display","alignItems","justifyContent","fontWeight","role","borderWidth","fontSize","mb","onChange","placeholder","size","mr","colorScheme","variant","opacity","onClick","mt","strokeWidth"],"sources":["/Users/nongshim/Desktop/Python/project/streamlit_image_annotation_backup/Detection/frontend/src/Detection.tsx"],"sourcesContent":["import {\n  Streamlit,\n  withStreamlitConnection,\n  ComponentProps\n} from \"streamlit-component-lib\"\nimport React, { useEffect, useState, useRef } from \"react\"\nimport { ChakraProvider, Input, Box, HStack, VStack, Center, Button, Text, Flex } from '@chakra-ui/react'\nimport { extendTheme } from '@chakra-ui/react';\nimport useImage from 'use-image';\nimport BBoxCanvas from \"./BBoxCanvas\";\n\n// 테마 설정 - 강제 라이트 모드\nconst theme = extendTheme({\n  config: {\n    initialColorMode: 'light',\n    useSystemColorMode: false,\n  },\n});\n\nexport interface PythonArgs {\n  image_url: string,\n  image_size: number[],\n  bbox_info: any[],\n  color_map: any,\n  line_width: number,\n  use_space: boolean,\n  ocr_suggestions: string[]\n}\n\ninterface Rectangle {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n  label: string;\n  stroke: string;\n  id: string;\n}\n\nconst Detection = ({ args }: ComponentProps) => {\n  const {\n    image_url,\n    image_size,\n    bbox_info,\n    color_map,\n    line_width,\n    use_space,\n    ocr_suggestions\n\n  }: PythonArgs = args\n\n  const params = new URLSearchParams(window.location.search);\n  const baseUrl = params.get('streamlitUrl')\n  const [image] = useImage(baseUrl + image_url)\n\n  const [rectangles, setRectangles] = React.useState<Rectangle[]>(\n    bbox_info.map((bb, i) => ({\n      x: bb.bbox[0],\n      y: bb.bbox[1],\n      width: bb.bbox[2],\n      height: bb.bbox[3],\n      label: bb.label,\n      stroke: \"#39FF14\",  // color_map[bb.label],\n      id: 'bbox-' + i\n    }))\n  );\n  \n  const [selectedId, setSelectedId] = React.useState<string | null>(null);\n  const [label, setLabel] = useState(\"\"); \n  const [mode, setMode] = React.useState<string>('Draw');\n  const [isLabelEditMode, setIsLabelEditMode] = useState(false);\n  const [scale, setScale] = useState(1.0);\n  const [saveNotification, setSaveNotification] = useState<boolean>(false);\n  const [showLabels, setShowLabels] = useState(false);\n  const [suggestedLabels, setSuggestedLabels] = useState<string[]>([]);\n  const [isLoadingLabels, setIsLoadingLabels] = useState<boolean>(false);\n  const [showSuggestions, setShowSuggestions] = useState<boolean>(false);\n\n\n  useEffect(() => {\n    if (ocr_suggestions && ocr_suggestions.length > 0) {\n      console.log(\"Received OCR suggestions from props:\", ocr_suggestions);\n      setSuggestedLabels(ocr_suggestions);\n      setIsLoadingLabels(false);\n      setShowSuggestions(true);\n    }\n  }, [ocr_suggestions]);\n  \n  // Streamlit 컴포넌트 통신 개선\n  const sendStateToStreamlit = (currentMode: string, boxesData: Rectangle[], currentScale: number, selectedBoxId: string | null = null) => {\n    try {\n      // 필요한 데이터만 전송하도록 최적화\n      const currentBboxValue = boxesData.map((rect) => ({\n        bbox: [rect.x, rect.y, rect.width, rect.height],\n        label: rect.label || \"\", // 빈 라벨 안전하게 처리\n      }));\n      \n      // OCR 요청 시에만 full data 전송, 아닐 때는 최소 데이터만\n      if (selectedBoxId !== null) {\n        console.log(\"DEBUG: OCR 요청 전송\", selectedBoxId);\n        \n        // 선택된 박스가 존재하는지 확인\n        const selectedBox = boxesData.find(box => box.id === selectedBoxId);\n        if (!selectedBox) {\n          console.error(\"선택된 박스를 찾을 수 없음\");\n          return;\n        }\n        \n        Streamlit.setComponentValue({\n          mode: currentMode,\n          bboxes: currentBboxValue,\n          scale: currentScale,\n          save_requested: false,\n          request_ocr: true,\n          selected_box_id: selectedBoxId,\n          selected_box_coords: [selectedBox.x, selectedBox.y, selectedBox.width, selectedBox.height]\n        });\n      } else {\n        // 일반 상태 업데이트에서는 OCR 관련 플래그 제외\n        Streamlit.setComponentValue({\n          mode: currentMode,\n          bboxes: currentBboxValue,\n          scale: currentScale,\n          save_requested: false\n        });\n      }\n    } catch (error) {\n      console.error(\"상태 전송 중 오류 발생:\", error);\n    }\n  };\n  \nconst pendingOCRRequestRef = useRef(false);\n\nconst sendOCRRequest = (selectedId: string, mode: string, rectangles: Rectangle[], scale: number) => {\n  if (pendingOCRRequestRef.current) {\n    console.log(\"이미 처리 중인 OCR 요청이 있습니다\");\n    return;\n  }\n  \n  pendingOCRRequestRef.current = true;\n  \n  // 선택된 ID에 해당하는 인덱스 찾기\n  const selectedIndex = rectangles.findIndex(rect => rect.id === selectedId);\n  \n  // 인덱스를 찾았을 때만 요청 전송\n  if (selectedIndex !== -1) {\n    // OCR 요청 보내기\n    Streamlit.setComponentValue({\n      mode: mode,\n      bboxes: rectangles.map((rect) => ({\n        bbox: [rect.x, rect.y, rect.width, rect.height],\n        label: rect.label,\n      })),\n      scale: scale,\n      request_ocr: true,\n      selected_box_index: selectedIndex  // ID 대신 인덱스 전송\n    });\n  } else {\n    console.error(\"선택된 ID에 해당하는 바운딩 박스를 찾을 수 없습니다:\", selectedId);\n  }\n\n  // 요청 플래그 초기화 (일정 시간 후)\n  setTimeout(() => {\n    pendingOCRRequestRef.current = false;\n  }, 1000);\n};\n\n// 메시지 이벤트 리스너 수정\nuseEffect(() => {\n  const onDataFromPython = (event: MessageEvent) => {\n    if (event.data.type === 'streamlit:render') {\n      console.log(\"전체 데이터:\", event.data.args);\n      console.log(\"컴포넌트 데이터:\", event.data.args.data);\n      try {\n        const data = event.data.args.data;\n        \n        // OCR 추천 결과 처리 개선\n        if (data && data.ocr_suggestions && Array.isArray(data.ocr_suggestions)) {\n          console.log(\"DEBUG: OCR 추천 목록 받음:\", data.ocr_suggestions);\n          \n          // 상태 업데이트를 일괄적으로 처리\n          setSuggestedLabels(data.ocr_suggestions);\n          setIsLoadingLabels(false);\n          setShowSuggestions(true);\n          \n          // 디버깅: 실제로 UI에 표시되는지 확인\n          setTimeout(() => {\n            console.log(\"DEBUG: UI 상태 최종 확인\", {\n              suggestedLabels: data.ocr_suggestions,\n              showSuggestions: true\n            });\n          }, 100);\n        }\n      } catch (error) {\n        console.error(\"오류 발생:\", error);\n      }\n    }\n  };\n  \n  window.addEventListener('message', onDataFromPython);\n  return () => window.removeEventListener('message', onDataFromPython);\n}, [setSuggestedLabels, setIsLoadingLabels, setShowSuggestions]); // 상태 업데이트 함수들을 의존성 배열에 추가\n\n  // 현재 선택된 박스의 라벨로 입력란 업데이트\n  useEffect(() => {\n    if (selectedId) {\n      const selectedRect = rectangles.find(rect => rect.id === selectedId);\n      if (selectedRect) {\n        setLabel(selectedRect.label);\n      }\n    }\n  }, [selectedId, rectangles]);\n\n  // 모드가 변경될 때마다 Streamlit으로 전송\n  useEffect(() => {\n    sendStateToStreamlit(mode, rectangles, scale);\n  }, [mode, rectangles]);\n  \n  // 모드 변경이 제대로 되는지 확인\n  useEffect(() => {\n    console.log(\"현재 모드:\", mode);\n  }, [mode]);\n\n  // 사용자 입력을 반영하는 함수\n  const handleLabelInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newLabel = event.target.value;\n    setLabel(newLabel);\n    if (selectedId !== null) {\n      setRectangles((prev) =>\n        prev.map((rect) =>\n          rect.id === selectedId ? { ...rect, label: newLabel, stroke: \"#39FF14\" } : rect\n      // color_map[newLabel] || \"#FF0000\" } : rect\n        )\n      );\n    }\n  };\n\n  \n  // 캔버스 크기 조정\n  useEffect(() => {\n    // 초기 스케일 설정 및 프레임 높이 조정을 하나의 useEffect로 통합\n    const initializeScale = () => {\n      // 최초 로드 시 초기 스케일 계산\n      if (scale === 1.0 && image_size[0] > 0) {\n        const scale_ratio = window.innerWidth * 0.8 / image_size[0];\n        setScale(Math.min(scale_ratio, 1.0));\n      }\n    };\n    \n    const updateFrameHeight = () => {\n      // 현재 이미지 크기와 스케일 기반으로 프레임 높이 조정\n      if (image_size[1] > 0) {\n        Streamlit.setFrameHeight(image_size[1] * scale + 100);\n      }\n    };\n    \n    // 초기화 및 첫 번째 프레임 높이 설정\n    initializeScale();\n    updateFrameHeight();\n    \n    // 윈도우 리사이즈 이벤트 리스너\n    window.addEventListener('resize', updateFrameHeight);\n    return () => {\n      window.removeEventListener('resize', updateFrameHeight);\n    };\n  }, [image_size, scale]); // 이미지 크기와 스케일 의존성 추가\n\n\n  // 키보드 단축키 처리\n  useEffect(() => {\n    const handleKeyPress = (event: KeyboardEvent) => {\n      console.log(\"keydown 이벤트 감지됨:\", event.code, \"Ctrl:\", event.ctrlKey, \"Shift:\", event.shiftKey);\n      \n      if (use_space && event.code === \"Space\") {\n        sendStateToStreamlit(mode, rectangles, scale);  \n      }\n  \n      if (event.ctrlKey && event.code === \"KeyE\") {\n        event.preventDefault();\n        console.log(\"변경: Edit 모드로 전환\");\n        setMode(\"Edit\");\n      }\n  \n      if (event.ctrlKey && event.code === \"KeyD\") {\n        event.preventDefault();\n        console.log(\"변경: Draw 모드로 전환\");\n        setMode(\"Draw\");\n      }\n\n      // 라벨 입력 모드 토글 (Ctrl + L)\n      if (event.ctrlKey && event.code === \"KeyL\") {\n        event.preventDefault();\n        console.log(\"Ctrl+L 감지, 선택된 ID:\", selectedId);\n        \n        if (selectedId) {\n          // 상태 변경을 일괄 처리하고 함수형 업데이트 사용\n          setIsLabelEditMode(true);\n          setShowSuggestions(true);\n          \n          // OCR 요청을 다음 렌더링 사이클로 지연\n          // 렌더링 사이클이 완료된 후 실행되도록 함\n          requestAnimationFrame(() => {\n            setIsLoadingLabels(true);\n            sendOCRRequest(selectedId, mode, rectangles, scale);\n          });\n        }\n      }\n\n      // 라벨 표시 토글 (Ctrl + T)\n      if (event.ctrlKey && event.code === \"KeyT\") {\n        event.preventDefault();\n        console.log(\"변경: 라벨 표시 토글\");\n        setShowLabels(prev => !prev);\n      }\n\n      // Ctrl+S 단축키 감지 추가\n      if (event.ctrlKey && event.code === \"KeyS\") {\n        event.preventDefault();\n        console.log(\"Ctrl+S 감지: 어노테이션 저장\");\n        \n        // 안내 표시 활성화\n        setSaveNotification(true);\n        \n        // 3초 후에 안내 메시지 숨기기\n        setTimeout(() => {\n          setSaveNotification(false);\n        }, 3000);\n        \n        // Streamlit으로 저장 명령 전송\n        Streamlit.setComponentValue({\n          mode: mode,\n          bboxes: rectangles.map((rect) => ({\n            bbox: [rect.x, rect.y, rect.width, rect.height],\n            label: rect.label,\n          })),\n          scale: scale,\n          save_requested: true  // 저장 요청 플래그 추가\n        });\n      }\n      // 삭제 기능\n      if (event.code === \"Delete\" && selectedId) {\n        event.preventDefault();\n        console.log(\"삭제: 선택된 바운딩 박스 삭제\", selectedId);\n        setRectangles((prev) => prev.filter((rect) => rect.id !== selectedId));\n        setSelectedId(null);\n        setIsLabelEditMode(false);\n      }\n      \n      // ESC 키로 라벨 입력 모드 취소 및 선택 해제\n      if (event.code === \"Escape\") {\n        event.preventDefault();\n        if (isLabelEditMode) {\n          setIsLabelEditMode(false);\n        } else if (selectedId) {\n          setSelectedId(null);\n        }\n      }\n    };\n  \n    window.addEventListener(\"keydown\", handleKeyPress);\n    return () => {\n      window.removeEventListener(\"keydown\", handleKeyPress);\n    };\n  }, [rectangles, use_space, selectedId, isLabelEditMode, mode]);\n\n  // 마우스 휠 확대/축소\n  useEffect(() => {\n    const handleWheel = (event: WheelEvent) => {\n      if (event.ctrlKey) {\n        event.preventDefault();\n\n        let newScale = scale + (event.deltaY < 0 ? 0.1 : -0.1);\n        newScale = Math.min(Math.max(newScale, 0.5), 3.0);\n        setScale(newScale);\n      }\n    };\n\n    window.addEventListener('wheel', handleWheel, { passive: false, capture: true });\n  }, [scale]);\n\n  // 스케일 포맷팅\n  const formatScale = (scale: number) => {\n    return `${Math.round(scale * 100)}%`;\n  };\n\n  // 라이트 모드로 고정된 색상 설정\n  const borderColor = 'gray.200';\n  const textColor = 'black';\n  const controlBgColor = 'gray.200';\n  const inputbgColor = 'white';\n\n  const handleModeChange = (newMode: string) => {\n    setMode(newMode);\n    // scale을 유지하면서 상태 업데이트\n    sendStateToStreamlit(newMode, rectangles, scale);\n  };\n\n  // 라벨 추천 선택 핸들러 함수 추가\n  const handleSuggestionSelect = (suggestedLabel: string) => {\n    setLabel(suggestedLabel);\n    if (selectedId !== null) {\n      setRectangles((prev) =>\n        prev.map((rect) =>\n          rect.id === selectedId ? { ...rect, label: suggestedLabel, stroke: \"#39FF14\" } : rect\n        )\n      );\n    }\n    setShowSuggestions(false); // 선택 후 추천 UI 닫기\n  };\n\n  \n  return (\n    <ChakraProvider theme={theme}>\n      <VStack spacing={4} align=\"stretch\">\n        {/* 저장 알림 메시지 */}\n        {saveNotification && (\n          <Box \n            p={3} \n            bg=\"green.100\" \n            color=\"green.800\" \n            borderRadius=\"md\" \n            position=\"fixed\" \n            top=\"20px\" \n            left=\"50%\" \n            transform=\"translateX(-50%)\" \n            zIndex={100}\n            boxShadow=\"md\"\n            display=\"flex\"\n            alignItems=\"center\"\n            justifyContent=\"center\"\n          >\n            <Text fontWeight=\"bold\">\n              <span role=\"img\" aria-label=\"save\">💾</span> 어노테이션 저장 요청이 전송되었습니다!\n            </Text>\n          </Box>\n        )}\n        \n        {/* 상단 컨트롤 영역 */}\n        <Box \n          p={3} \n          bg={controlBgColor} \n          borderRadius=\"md\" \n          position=\"sticky\" \n          top={0} \n          zIndex={10}\n          borderColor={borderColor}\n          borderWidth=\"1px\"\n          boxShadow=\"sm\"\n        >\n          <Flex justifyContent=\"space-between\" alignItems=\"center\">\n            <HStack spacing={4}>\n              {/* 라벨 입력 */}\n              <Box>\n                <Text fontSize=\"sm\" mb={1} color={textColor}>Class</Text>\n                <Input \n                  value={label} \n                  onChange={handleLabelInputChange} \n                  placeholder=\"Enter label\"\n                  size=\"sm\"\n                  width=\"200px\"\n                  bg={inputbgColor}\n                  borderColor={borderColor}\n                />\n              </Box>\n            </HStack>\n            \n            <HStack>\n              <Text fontSize=\"sm\" mr={2} color={textColor}>Zoom: {formatScale(scale)}</Text>\n              <Button \n                size=\"sm\" \n                colorScheme=\"teal\"\n                variant={showLabels ? \"solid\" : \"outline\"}\n                opacity={showLabels ? 1 : 0.7}\n                onClick={() => setShowLabels(prev => !prev)}\n              >\n                {showLabels ? \"Hide Labels\" : \"Show Labels\"}\n              </Button>\n\n              <Button \n                size=\"sm\" \n                colorScheme=\"green\"\n                variant={mode === \"Draw\" ? \"solid\" : \"outline\"}\n                opacity={mode === \"Draw\" ? 1 : 0.7}\n                // onClick={() => setMode(\"Draw\")}\n                onClick={() => handleModeChange(\"Draw\")} // 직접 setMode 대신 핸들러 사용\n              >\n                Draw\n              </Button>\n              <Button \n                size=\"sm\" \n                colorScheme=\"blue\"\n                variant={mode === \"Edit\" ? \"solid\" : \"outline\"}\n                opacity={mode === \"Edit\" ? 1 : 0.7}\n                onClick={() => setMode(\"Edit\")}\n              >\n                Edit\n              </Button>\n              <Button \n                size=\"sm\" \n                colorScheme=\"purple\"\n                onClick={() => {\n                  // 저장 요청 플래그를 포함하여 Streamlit으로 데이터 전송\n                  setSaveNotification(true);\n                  setTimeout(() => setSaveNotification(false), 3000);\n                  \n                  Streamlit.setComponentValue({\n                    mode: mode,\n                    bboxes: rectangles.map((rect) => ({\n                      bbox: [rect.x, rect.y, rect.width, rect.height],\n                      label: rect.label,\n                    })),\n                    scale: scale,\n                    save_requested: true\n                  });\n                }}\n              >\n                Save\n              </Button>\n            </HStack>\n          </Flex>\n          \n          <Flex mt={2} justifyContent=\"space-between\" alignItems=\"center\">\n            <Text fontSize=\"xs\" color={textColor}>Selected Items: {rectangles.length}</Text>\n          </Flex>\n        </Box>\n        \n        {/* 이미지 영역 */}\n        <Box>\n          <Center>\n          <BBoxCanvas\n            rectangles={rectangles}\n            mode={mode}\n            selectedId={selectedId}\n            scale={scale}\n            setSelectedId={setSelectedId}\n            setRectangles={setRectangles}\n            setLabel={setLabel}\n            color_map={color_map}\n            label={label}\n            image={image}\n            image_size={image_size}\n            strokeWidth={line_width}\n            isLabelEditMode={isLabelEditMode}\n            setIsLabelEditMode={setIsLabelEditMode}\n            handleLabelInputChange={handleLabelInputChange}\n            showLabels={showLabels}\n            suggestedLabels={suggestedLabels} // 여기가 제대로 전달되는지 확인\n            showSuggestions={showSuggestions} // 여기가 true로 설정되는지 확인\n            setShowSuggestions={setShowSuggestions}\n            handleSuggestionSelect={handleSuggestionSelect}\n            isLoadingLabels={isLoadingLabels}\n          />\n          </Center>\n        </Box>\n      </VStack>\n    </ChakraProvider>\n  );\n};\n\nexport default withStreamlitConnection(Detection);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}